buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.1'
        classpath 'digital.wup:android-maven-publish:3.6.2'
    }
}


apply plugin: 'com.android.library'
apply plugin: 'digital.wup.android-maven-publish'


android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 28
        //testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
	    multiDexEnabled true
    }

    lintOptions {
//    	disable 'LintError'
        abortOnError false
    }

    packagingOptions {
        /* Otherwise DuplicateFileException */
        //exclude 'LICENSE.Open-eCard'
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    sourceSets {
        main {
            resources {
                srcDir("$buildDir/bundleImpl")
            }
        }
    }
}


repositories {
    google()
    jcenter()
    mavenLocal()
}


// get version and groupId from pom.xml

def pomDom = new XmlSlurper()
        .parse(new File(projectDir, "pom.xml"))
        .declareNamespace(m: "http://maven.apache.org/POM/4.0.0")
version = pomDom.'m:parent'.'m:version'.text()
group pomDom.'m:groupId'.text()



// define config to load OeC deps

configurations {
    bundleImpl {
        exclude group: "com.github.markusbernhardt"
        exclude group: "org.openecard.ifd.scio-backend", module: "pcsc"
        exclude group: "org.json"
        exclude group: "javax.jws"
        exclude group: "javax.xml.ws"
    }
}


dependencies {

    implementation 'com.android.support:appcompat-v7:28.0.0'
    //testImplementation 'junit:junit:4.12'
    //androidTestImplementation 'com.android.support.test:runner:1.0.2'
    //androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // necessary dependencies which are not packed into the aar
    api 'org.slf4j:slf4j-api:1.7.25'
    api 'xerces:xercesImpl:2.12.0'

    // compile time dependencies which are not needed at runtime
    compileOnly 'javax.xml.bind:jaxb-api:2.3.1'
    compileOnly 'com.google.code.findbugs:annotations:3.0.1u2'

    // all OeC dependencies

    bundleImpl "org.openecard.wsdef:android-marshaller:${version}"
    bundleImpl "org.openecard.gui:android:${version}"
    bundleImpl "org.openecard.transport:dispatcher:${version}"
    bundleImpl "org.openecard:recognition:${version}"
    bundleImpl "org.openecard:management:${version}"
    bundleImpl "org.openecard.ifd.scio-backend:android-nfc:${version}"
    bundleImpl "org.openecard.sal:tiny-sal:${version}"
    bundleImpl "org.openecard:addon:${version}"
    bundleImpl "org.openecard.addons:tr03112:${version}"
    bundleImpl "org.openecard.addons:pin-management:${version}"
    bundleImpl "org.openecard.addons:status:${version}"
    bundleImpl "org.openecard.addons:genericcryptography:${version}"
    bundleImpl "org.openecard.ifd.protocols:pace:${version}"
    // needed or the thing crashes (should be made an api dependecy)
    bundleImpl "javax.jws.jsr181-api:jsr181-api:2.1.1"

    // add all bundleImpl deps, so that class files get copied and the deps are available for the compilation
    implementation configurations.bundleImpl.asFileTree

}



// custom tasks to take care of OeC resource files which are excluded by the aar build

task copyLibs(type: Copy) {
    dependsOn configurations.bundleImpl

    from {
        configurations.bundleImpl.collect {
            zipTree(it)
        }
    }
    into "$buildDir/bundleImpl/"
    exclude '**/*.class'
    exclude 'META-INF/maven/**'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'cif-repo/repo-config.properties'
}

preBuild.dependsOn(copyLibs)



// deployment config

publishing {
    repositories {
        maven {
            def releasesRepoUrl = "https://mvn.ecsec.de/repository/openecard-release"
            def snapshotsRepoUrl = "https://mvn.ecsec.de/repository/openecard-snapshot"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            // use credentials from globally configured properties
            credentials {
                username = ecsecRepoUser
                password = ecsecRepoPass
            }
        }
    }

    publications {
        lib(MavenPublication) {
            //groupId 'com.foo'
            artifactId 'android-lib'
            //version '0.1'
            //artifact("$buildDir/outputs/aar/android-lib-debug.aar")
            from components.android
        }
    }
}
