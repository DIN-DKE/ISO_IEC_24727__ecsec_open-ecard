workflow:
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-rc.\d+)?$/
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == "master"

stages:
  - compile
  - test
  - analyze
  - package

include:
  - template: Security/SAST.gitlab-ci.yml

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"
  CACHE_KEY: oec-cache

compile:
  stage: compile
  image: public.docker.ecsec.de/ecsec/tools/oec-linux-installer:latest
  tags:
    - "linux"
  cache:
    key: "$CACHE_KEY"
    paths:
      - .m2/repository/
    policy: pull-push
  script:
    - MAVEN_OPTS=$MAVEN_OPTS mvn clean compile
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-rc.\d+)?$/
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == "master"

test:
  stage: test
  image: public.docker.ecsec.de/ecsec/tools/oec-linux-installer:latest
  tags:
    - "linux"
  cache:
    key: "$CACHE_KEY"
    paths:
      - .m2/repository/
    policy: pull-push
  script:
    - MAVEN_OPTS=$MAVEN_OPTS mvn verify
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-rc.\d+)?$/
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == "master"

# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
sast:
  stage: analyze
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-rc.\d+)?$/
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == "master"

package-linux-deb:
  stage: package
  image: public.docker.ecsec.de/ecsec/tools/oec-linux-installer:latest
  tags:
    - "linux"
  artifacts:
    paths:
      - packager/richclient-packager/target/jpackage
  script:
    - mvn install -DskipTests -Ddesktop-package -Dpackage.type=DEB
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-rc.\d+)?$/

package-linux-rpm:
  stage: package
  image: public.docker.ecsec.de/ecsec/tools/oec-linux-installer:latest
  tags:
    - "linux"
  artifacts:
    paths:
      - packager/richclient-packager/target/jpackage
  script:
    - mvn install -DskipTests -Ddesktop-package -Dpackage.type=RPM
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-rc.\d+)?$/

package-osx-pkg:
  stage: package
  tags:
    - "mac"
    - "dev-cert"
  variables:
    JAVA_HOME: /Users/ecsec-ci/Library/Java/JavaVirtualMachines/jdk-17.0.2.jdk/Contents/Home/
  artifacts:
    paths:
      - packager/richclient-packager/target/jpackage
  script:
    - security unlock-keychain -p ${MAC_OS_KEYCHAIN_PW} /Users/ecsec-ci/Library/Keychains/login.keychain-db
    - security unlock-keychain -p ${MAC_OS_KEYCHAIN_PW} /Users/ecsec-ci/Library/Keychains/ecsec.keychain-db
    - mvn install -DskipTests -Ddesktop-package -Dpackage.type=PKG
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-rc.\d+)?$/

package-osx-dmg:
  stage: package
  tags:
    - "mac"
    - "dev-cert"
  variables:
    JAVA_HOME: /Users/ecsec-ci/Library/Java/JavaVirtualMachines/jdk-17.0.2.jdk/Contents/Home/
  artifacts:
    paths:
      - packager/richclient-packager/target/jpackage
  script:
    - mvn install -DskipTests -Ddesktop-package -Dpackage.type=DMG
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-rc.\d+)?$/

notarize-osx-pkg:
  stage: package
  tags:
    - "mac"
    - "dev-cert"
  dependencies:
    - "package-osx-pkg"
    - "package-osx-dmg"
  script:
    - security unlock-keychain -p ${MAC_OS_KEYCHAIN_PW} /Users/ecsec-ci/Library/Keychains/login.keychain-db
    - PKG_FILE_PATH=$(find packager/richclient-packager/target/jpackage/ -name 'Open-eCard-App-*.pkg')
    - xcrun notarytool submit ${PKG_FILE_PATH}
        --keychain-profile "oec-installers"
        --wait
  needs: [ "package-osx-pkg", "package-osx-dmg" ]
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-rc.\d+)?$/
      when: manual

package-win:
  stage: package
  tags:
    - "win"
  variables:
    WIN_KEYSTORE: C:\gitlab-runner\assets\openecard_cs.p12
  artifacts:
    paths:
      - packager/richclient-packager/target/iscc
  script:
    - .\mvnw.cmd install -DskipTests -Ddesktop-package
    - $EXE_FILE_PATH = $(Get-Childitem
        -Path .\packager\richclient-packager\target\iscc\
        -Include Open-eCard-App-*.exe
        -File -Recurse -ErrorAction SilentlyContinue | Format-Wide Name  | Out-String).Trim()                                          
    - signtool.exe sign 
        /debug 
        /p ${WIN_KEYCHAIN_PW}
        /f "${WIN_KEYSTORE}"
        /tr http://sha256timestamp.ws.symantec.com/sha256/timestamp
        /td SHA256
        /fd SHA256
        .\packager\richclient-packager\target\iscc\$EXE_FILE_PATH
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-rc.\d+)?$/
