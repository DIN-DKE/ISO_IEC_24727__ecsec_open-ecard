workflow:
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-rc.\d+)?$/
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == "master"

stages:
  - compile
  - test
  - analyze
  - package
  - post-package

include:
  - template: Security/SAST.gitlab-ci.yml

.docker-cache: &docker-cache
  cache:
    key: oec-cache
    paths:
      - .m2/wrapper/dists
      - .m2/repository/
      - .mvn/wrapper/maven-wrapper.jar
    policy: pull-push

.macos-cache: &macos-cache
  cache:
    key: oec-macos-cache
    paths:
      - .m2/wrapper/dists
      - .m2/repository/
      - .mvn/wrapper/maven-wrapper.jar
    policy: pull-push

.win-cache: &win-cache
  cache:
    key: oec-win-cache
    paths:
      - .m2/wrapper/dists
      - .m2/repository/
      - .mvn/wrapper/maven-wrapper.jar
    policy: pull-push

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"
  MAVEN_USER_HOME: "$CI_PROJECT_DIR/.m2"

compile:
  stage: compile
  image: public.docker.ecsec.de/ecsec/tools/oec-linux-installer:latest
  tags:
    - "docker-exec"
  <<: *docker-cache
  script:
    - MAVEN_USER_HOME=$MAVEN_USER_HOME MAVEN_OPTS=$MAVEN_OPTS ./mvnw clean compile
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-rc.\d+)?$/
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == "master"

compile-mobile-lib:
  stage: compile
  tags:
    - "mac"
    - "dev-cert"
  <<: *docker-cache
  artifacts:
    name: 'OpenEcard-CocoaPod'
    paths:
      - OpenEcard.xcframework/
      - LICENSE.*
      - LICENSE
  script:
    - MAVEN_USER_HOME=$MAVEN_USER_HOME MAVEN_OPTS=$MAVEN_OPTS ./mvnw clean install -P build-mobile-libs -DskipTests
    - mv packager/ios-framework/target/robovm/OpenEcard.xcframework OpenEcard.xcframework/
    - cp LICENSE.GPL LICENSE
  needs: []
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-rc.\d+)?$/
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == "master"

test:
  stage: test
  image: public.docker.ecsec.de/ecsec/tools/oec-linux-installer:latest
  tags:
    - "docker-exec"
  <<: *docker-cache
  artifacts:
    reports:
      junit:
        - "**/target/surefire-reports/TEST-*.xml"
  script:
    - MAVEN_USER_HOME=$MAVEN_USER_HOME MAVEN_OPTS=$MAVEN_OPTS ./mvnw verify -Dci.env
  needs: [ "compile" ]
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-rc.\d+)?$/
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == "master"

# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
sast:
  stage: analyze

package-linux-deb:
  stage: package
  image: public.docker.ecsec.de/ecsec/tools/oec-linux-installer:latest
  tags:
    - "docker-exec"
  <<: *docker-cache
  artifacts:
    name: 'OeC-Installer-DEB'
    paths:
      - packager/richclient-packager/target/jpackage
  script:
    - MAVEN_USER_HOME=$MAVEN_USER_HOME MAVEN_OPTS=$MAVEN_OPTS ./mvnw install -DskipTests -Ddesktop-package -Dpackage.type=DEB
  needs: [ "compile" ]
  allow_failure: true
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-rc.\d+)?$/
    - if: $CI_COMMIT_BRANCH == "master"
      when: manual
    - if: $CI_MERGE_REQUEST_IID
      when: manual

package-linux-rpm:
  stage: package
  image: public.docker.ecsec.de/ecsec/tools/oec-linux-installer:latest
  tags:
    - "docker-exec"
  <<: *docker-cache
  artifacts:
    name: 'OeC-Installer-RPM'
    paths:
      - packager/richclient-packager/target/jpackage
  script:
    - MAVEN_USER_HOME=$MAVEN_USER_HOME MAVEN_OPTS=$MAVEN_OPTS ./mvnw install -DskipTests -Ddesktop-package -Dpackage.type=RPM
  needs: [ "compile" ]
  allow_failure: true
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-rc.\d+)?$/
    - if: $CI_COMMIT_BRANCH == "master"
      when: manual
    - if: $CI_MERGE_REQUEST_IID
      when: manual

package-osx-pkg:
  stage: package
  tags:
    - "mac"
    - "dev-cert"
  <<: *macos-cache
  artifacts:
    name: 'OeC-Installer-PKG'
    paths:
      - packager/richclient-packager/target/jpackage
  script:
    - security unlock-keychain -p ${MAC_OS_KEYCHAIN_PW} /Users/ecsec-ci/Library/Keychains/login.keychain-db
    - security unlock-keychain -p ${MAC_OS_KEYCHAIN_PW} /Users/ecsec-ci/Library/Keychains/ecsec.keychain-db
    - ./mvnw install -DskipTests -Ddesktop-package -Dpackage.type=PKG
  needs: [ "compile" ]
  allow_failure: true
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-rc.\d+)?$/
    - if: $CI_COMMIT_BRANCH == "master"
      when: manual
    - if: $CI_MERGE_REQUEST_IID
      when: manual

package-osx-dmg:
  stage: package
  tags:
    - "mac"
    - "dev-cert"
  <<: *macos-cache
  artifacts:
    name: 'OeC-Installer-DMG'
    paths:
      - packager/richclient-packager/target/jpackage
  script:
    - ./mvnw install -DskipTests -Ddesktop-package -Dpackage.type=DMG
  needs: [ "compile" ]
  allow_failure: true
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-rc.\d+)?$/
    - if: $CI_COMMIT_BRANCH == "master"
      when: manual
    - if: $CI_MERGE_REQUEST_IID
      when: manual

notarize-osx-pkg:
  stage: package
  tags:
    - "mac"
    - "dev-cert"
  dependencies:
    - "package-osx-pkg"
    - "package-osx-dmg"
  script:
    - security unlock-keychain -p ${MAC_OS_KEYCHAIN_PW} /Users/ecsec-ci/Library/Keychains/login.keychain-db
    - PKG_FILE_PATH=$(find packager/richclient-packager/target/jpackage/ -name 'Open-eCard-App-*.pkg')
    - xcrun notarytool submit ${PKG_FILE_PATH}
        --keychain-profile "oec-installers"
        --wait
  needs: [ "package-osx-pkg", "package-osx-dmg" ]
  allow_failure: true
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-rc.\d+)?$/
    - if: $CI_COMMIT_BRANCH == "master"
      when: manual
    - if: $CI_MERGE_REQUEST_IID
      when: manual

package-win:
  stage: package
  tags:
    - "win"
  variables:
    WIN_KEYSTORE: C:\gitlab-runner\assets\openecard_cs.p12
  <<: *win-cache
  artifacts:
    name: 'OeC-Installer-EXE'
    paths:
      - packager/richclient-packager/target/iscc
  script:
    - .\mvnw.cmd install -DskipTests -Ddesktop-package
    - $EXE_FILE_PATH = $(Get-Childitem
        -Path .\packager\richclient-packager\target\iscc\
        -Include Open-eCard-App-*.exe
        -File -Recurse -ErrorAction SilentlyContinue | Format-Wide Name  | Out-String).Trim()                                          
    - signtool.exe sign 
        /debug 
        /p ${WIN_KEYCHAIN_PW}
        /f "${WIN_KEYSTORE}"
        /tr http://sha256timestamp.ws.symantec.com/sha256/timestamp
        /td SHA256
        /fd SHA256
        .\packager\richclient-packager\target\iscc\$EXE_FILE_PATH
  needs: [ "compile" ]
  allow_failure: true
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-rc.\d+)?$/
    - if: $CI_COMMIT_BRANCH == "master"
      when: manual
    - if: $CI_MERGE_REQUEST_IID
      when: manual

collect-installers:
  stage: post-package
  image: public.docker.ecsec.de/ecsec/tools/oec-linux-installer:latest
  tags:
    - "docker-exec"
  artifacts:
    name: 'OeC-Installers'
    paths:
      - "*.deb"
      - "*.rpm"
      - "*.dmg"
      - "*.pkg"
      - "*.exe"
  script:
    - >-
      cp  packager/richclient-packager/target/jpackage/*.pkg \
          packager/richclient-packager/target/jpackage/*.dmg \
          packager/richclient-packager/target/jpackage/*.deb \
          packager/richclient-packager/target/jpackage/*.rpm \
          packager/richclient-packager/target/iscc/*.exe \
          .
  dependencies:
    - "package-linux-deb"
    - "package-linux-rpm"
    - "package-osx-pkg"
    - "package-osx-dmg"
    - "package-win"
  needs:
    - "package-linux-deb"
    - "package-linux-rpm"
    - "package-osx-pkg"
    - "package-osx-dmg"
    - "package-win"
  allow_failure: true
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-rc.\d+)?$/
    - if: $CI_COMMIT_BRANCH == "master"
      when: manual
    - if: $CI_MERGE_REQUEST_IID
      when: manual

publish-ios-pod-spec:
  stage: post-package
  tags:
    - "mac"
    - "dev-cert"
  <<: *docker-cache
  script:
    - TAG=$(echo "${CI_COMMIT_TAG}" | cut -c 2-)
    - echo "Pod::Spec.new do |s|" > open-ecard.podspec
    - echo "s.name              = 'open-ecard'" >> open-ecard.podspec
    - echo "s.version           = '${TAG}'" >> open-ecard.podspec
    - echo "s.summary           = 'ecard framework'" >> open-ecard.podspec
    - echo "s.description       = 'Open source framework implementing the eCard-API-Framework (BSI-TR-03112) through which arbitrary applications can utilize authentication and signatures with arbitrary chip cards'" >> open-ecard.podspec
    - echo "s.homepage          = 'https://dev.openecard.org'" >> open-ecard.podspec
    - echo "s.author            = { 'Name' => 'florian.otto@ecsec.de' }" >> open-ecard.podspec
    - echo "s.license           = { :type => 'GPLv3', :file => 'LICENSE' }" >> open-ecard.podspec
    - echo "s.source            = { :http => 'https://github.com/ecsec/open-ecard/releases/download/"${TAG}"/OpenEcard-CocoaPod.zip' }" >> open-ecard.podspec
    - echo "s.ios.deployment_target = '13.0'" >> open-ecard.podspec
    - echo "s.ios.vendored_frameworks = 'OpenEcard.xcframework'" >> open-ecard.podspec
    - echo end >> open-ecard.podspec
    - pod trunk push open-ecard.podspec
  needs: []
  allow_failure: true
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(-rc.\d+)?$/
      when: manual
