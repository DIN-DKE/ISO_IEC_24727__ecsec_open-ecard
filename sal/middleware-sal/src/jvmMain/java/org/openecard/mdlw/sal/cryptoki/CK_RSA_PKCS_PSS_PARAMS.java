package org.openecard.mdlw.sal.cryptoki;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : pkcs11_v2.40/pkcs11t.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CK_RSA_PKCS_PSS_PARAMS extends Structure {
	/** C type : CK_MECHANISM_TYPE */
	public NativeLong hashAlg;
	public NativeLong getHashAlg() {
		return hashAlg;
	}
	public void setHashAlg(NativeLong hashAlg) {
		this.hashAlg = hashAlg;
	}
	/** C type : CK_RSA_PKCS_MGF_TYPE */
	public NativeLong mgf;
	public NativeLong getMgf() {
		return mgf;
	}
	public void setMgf(NativeLong mgf) {
		this.mgf = mgf;
	}
	/** C type : CK_ULONG */
	public NativeLong sLen;
	public NativeLong getSLen() {
		return sLen;
	}
	public void setSLen(NativeLong sLen) {
		this.sLen = sLen;
	}
	public CK_RSA_PKCS_PSS_PARAMS() {
		super();
	}
	 protected List<String> getFieldOrder() {
		return Arrays.asList("hashAlg", "mgf", "sLen");
	}
	/**
	 * @param hashAlg C type : CK_MECHANISM_TYPE<br>
	 * @param mgf C type : CK_RSA_PKCS_MGF_TYPE<br>
	 * @param sLen C type : CK_ULONG
	 */
	public CK_RSA_PKCS_PSS_PARAMS(NativeLong hashAlg, NativeLong mgf, NativeLong sLen) {
		super(ALIGN_NONE);
		this.hashAlg = hashAlg;
		this.mgf = mgf;
		this.sLen = sLen;
	}
	public CK_RSA_PKCS_PSS_PARAMS(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends CK_RSA_PKCS_PSS_PARAMS implements Structure.ByReference {
		
	};
	public static class ByValue extends CK_RSA_PKCS_PSS_PARAMS implements Structure.ByValue {
		
	};
}
