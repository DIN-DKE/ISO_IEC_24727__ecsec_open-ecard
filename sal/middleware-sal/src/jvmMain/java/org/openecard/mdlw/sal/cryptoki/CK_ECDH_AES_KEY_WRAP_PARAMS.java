package org.openecard.mdlw.sal.cryptoki;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : pkcs11_v2.40/pkcs11t.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CK_ECDH_AES_KEY_WRAP_PARAMS extends Structure {
	/** C type : CK_ULONG */
	public long ulAESKeyBits;
	public long getUlAESKeyBits() {
		return ulAESKeyBits;
	}
	public void setUlAESKeyBits(long ulAESKeyBits) {
		this.ulAESKeyBits = ulAESKeyBits;
	}
	/** C type : CK_EC_KDF_TYPE */
	public long kdf;
	public long getKdf() {
		return kdf;
	}
	public void setKdf(long kdf) {
		this.kdf = kdf;
	}
	/** C type : CK_ULONG */
	public long ulSharedDataLen;
	public long getUlSharedDataLen() {
		return ulSharedDataLen;
	}
	public void setUlSharedDataLen(long ulSharedDataLen) {
		this.ulSharedDataLen = ulSharedDataLen;
	}
	/** C type : CK_BYTE_PTR */
	public Pointer pSharedData;
	public Pointer getPSharedData() {
		return pSharedData;
	}
	public void setPSharedData(Pointer pSharedData) {
		this.pSharedData = pSharedData;
	}
	public CK_ECDH_AES_KEY_WRAP_PARAMS() {
		super();
	}
	 protected List<String> getFieldOrder() {
		return Arrays.asList("ulAESKeyBits", "kdf", "ulSharedDataLen", "pSharedData");
	}
	/**
	 * @param ulAESKeyBits C type : CK_ULONG<br>
	 * @param kdf C type : CK_EC_KDF_TYPE<br>
	 * @param ulSharedDataLen C type : CK_ULONG<br>
	 * @param pSharedData C type : CK_BYTE_PTR
	 */
	public CK_ECDH_AES_KEY_WRAP_PARAMS(long ulAESKeyBits, long kdf, long ulSharedDataLen, Pointer pSharedData) {
		super();
		this.ulAESKeyBits = ulAESKeyBits;
		this.kdf = kdf;
		this.ulSharedDataLen = ulSharedDataLen;
		this.pSharedData = pSharedData;
	}
	public CK_ECDH_AES_KEY_WRAP_PARAMS(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends CK_ECDH_AES_KEY_WRAP_PARAMS implements Structure.ByReference {
		
	};
	public static class ByValue extends CK_ECDH_AES_KEY_WRAP_PARAMS implements Structure.ByValue {
		
	};
}
