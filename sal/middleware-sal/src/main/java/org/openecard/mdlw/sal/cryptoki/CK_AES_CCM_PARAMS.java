package org.openecard.mdlw.sal.cryptoki;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : pkcs11_v2.40/pkcs11t.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CK_AES_CCM_PARAMS extends Structure {
	/** C type : CK_ULONG */
	public long ulDataLen;
	public long getUlDataLen() {
		return ulDataLen;
	}
	public void setUlDataLen(long ulDataLen) {
		this.ulDataLen = ulDataLen;
	}
	/** C type : CK_BYTE_PTR */
	public Pointer pNonce;
	public Pointer getPNonce() {
		return pNonce;
	}
	public void setPNonce(Pointer pNonce) {
		this.pNonce = pNonce;
	}
	/** C type : CK_ULONG */
	public long ulNonceLen;
	public long getUlNonceLen() {
		return ulNonceLen;
	}
	public void setUlNonceLen(long ulNonceLen) {
		this.ulNonceLen = ulNonceLen;
	}
	/** C type : CK_BYTE_PTR */
	public Pointer pAAD;
	public Pointer getPAAD() {
		return pAAD;
	}
	public void setPAAD(Pointer pAAD) {
		this.pAAD = pAAD;
	}
	/** C type : CK_ULONG */
	public long ulAADLen;
	public long getUlAADLen() {
		return ulAADLen;
	}
	public void setUlAADLen(long ulAADLen) {
		this.ulAADLen = ulAADLen;
	}
	/** C type : CK_ULONG */
	public long ulMACLen;
	public long getUlMACLen() {
		return ulMACLen;
	}
	public void setUlMACLen(long ulMACLen) {
		this.ulMACLen = ulMACLen;
	}
	public CK_AES_CCM_PARAMS() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("ulDataLen", "pNonce", "ulNonceLen", "pAAD", "ulAADLen", "ulMACLen");
	}
	/**
	 * @param ulDataLen C type : CK_ULONG<br>
	 * @param pNonce C type : CK_BYTE_PTR<br>
	 * @param ulNonceLen C type : CK_ULONG<br>
	 * @param pAAD C type : CK_BYTE_PTR<br>
	 * @param ulAADLen C type : CK_ULONG<br>
	 * @param ulMACLen C type : CK_ULONG
	 */
	public CK_AES_CCM_PARAMS(long ulDataLen, Pointer pNonce, long ulNonceLen, Pointer pAAD, long ulAADLen, long ulMACLen) {
		super();
		this.ulDataLen = ulDataLen;
		this.pNonce = pNonce;
		this.ulNonceLen = ulNonceLen;
		this.pAAD = pAAD;
		this.ulAADLen = ulAADLen;
		this.ulMACLen = ulMACLen;
	}
	public CK_AES_CCM_PARAMS(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends CK_AES_CCM_PARAMS implements Structure.ByReference {
		
	};
	public static class ByValue extends CK_AES_CCM_PARAMS implements Structure.ByValue {
		
	};
}
