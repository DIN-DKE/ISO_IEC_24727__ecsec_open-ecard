package org.openecard.mdlw.sal.cryptoki;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : pkcs11_v2.40/pkcs11t.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CK_MECHANISM extends Structure {
	/** C type : CK_MECHANISM_TYPE */
	public NativeLong mechanism;
	public NativeLong getMechanism() {
		return mechanism;
	}
	public void setMechanism(NativeLong mechanism) {
		this.mechanism = mechanism;
	}
	/** C type : CK_VOID_PTR */
	public Pointer pParameter;
	public Pointer getPParameter() {
		return pParameter;
	}
	public void setPParameter(Pointer pParameter) {
		this.pParameter = pParameter;
	}
	/**
	 * in bytes<br>
	 * C type : CK_ULONG
	 */
	public NativeLong ulParameterLen;
	public NativeLong getUlParameterLen() {
		return ulParameterLen;
	}
	public void setUlParameterLen(NativeLong ulParameterLen) {
		this.ulParameterLen = ulParameterLen;
	}
	public CK_MECHANISM() {
		super();
	}
	 protected List<String> getFieldOrder() {
		return Arrays.asList("mechanism", "pParameter", "ulParameterLen");
	}
	/**
	 * @param mechanism C type : CK_MECHANISM_TYPE<br>
	 * @param pParameter C type : CK_VOID_PTR<br>
	 * @param ulParameterLen in bytes<br>
	 * C type : CK_ULONG
	 */
	public CK_MECHANISM(NativeLong mechanism, Pointer pParameter, NativeLong ulParameterLen) {
		super(ALIGN_NONE);
		this.mechanism = mechanism;
		this.pParameter = pParameter;
		this.ulParameterLen = ulParameterLen;
	}
	public CK_MECHANISM(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends CK_MECHANISM implements Structure.ByReference {
		
	};
	public static class ByValue extends CK_MECHANISM implements Structure.ByValue {
		
	};
}
