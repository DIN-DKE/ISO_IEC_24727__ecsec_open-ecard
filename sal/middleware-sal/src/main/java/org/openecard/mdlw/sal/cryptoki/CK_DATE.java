package org.openecard.mdlw.sal.cryptoki;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : pkcs11_v2.40/pkcs11t.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CK_DATE extends Structure {
	/**
	 * the year ("1900" - "9999")<br>
	 * C type : CK_CHAR[4]
	 */
	public byte[] year = new byte[4];
	public byte[] getYear() {
		return year;
	}
	public void setYear(byte year[]) {
		this.year = year;
	}
	/**
	 * the month ("01" - "12")<br>
	 * C type : CK_CHAR[2]
	 */
	public byte[] month = new byte[2];
	public byte[] getMonth() {
		return month;
	}
	public void setMonth(byte month[]) {
		this.month = month;
	}
	/**
	 * the day   ("01" - "31")<br>
	 * C type : CK_CHAR[2]
	 */
	public byte[] day = new byte[2];
	public byte[] getDay() {
		return day;
	}
	public void setDay(byte day[]) {
		this.day = day;
	}
	public CK_DATE() {
		super();
	}
	 protected List<String> getFieldOrder() {
		return Arrays.asList("year", "month", "day");
	}
	/**
	 * @param year the year ("1900" - "9999")<br>
	 * C type : CK_CHAR[4]<br>
	 * @param month the month ("01" - "12")<br>
	 * C type : CK_CHAR[2]<br>
	 * @param day the day   ("01" - "31")<br>
	 * C type : CK_CHAR[2]
	 */
	public CK_DATE(byte year[], byte month[], byte day[]) {
		super();
		if ((year.length != this.year.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.year = year;
		if ((month.length != this.month.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.month = month;
		if ((day.length != this.day.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.day = day;
	}
	public CK_DATE(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends CK_DATE implements Structure.ByReference {
		
	};
	public static class ByValue extends CK_DATE implements Structure.ByValue {
		
	};
}
