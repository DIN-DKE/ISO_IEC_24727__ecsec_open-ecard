/****************************************************************************
 * Copyright (C) 2016 ecsec GmbH.
 * All rights reserved.
 * Contact: ecsec GmbH (info@ecsec.de)
 *
 * This file is part of the Open eCard App.
 *
 * GNU General Public License Usage
 * This file may be used under the terms of the GNU General Public
 * License version 3.0 as published by the Free Software Foundation
 * and appearing in the file LICENSE.GPL included in the packaging of
 * this file. Please review the following information to ensure the
 * GNU General Public License version 3.0 requirements will be met:
 * http://www.gnu.org/copyleft/gpl.html.
 *
 * Other Usage
 * Alternatively, this file may be used in accordance with the terms
 * and conditions contained in a signed written agreement between
 * you and ecsec GmbH.
 *
 ***************************************************************************/
package org.openecard.mdlw.sal.enums;


/**
 *
 * @author Jan Mannsbart
 */
public enum AttributeValue {

    CKA_CLASS(0x00000000L),
    CKA_TOKEN(0x00000001L),
    CKA_PRIVATE(0x00000002L),
    CKA_LABEL(0x00000003L),
    CKA_APPLICATION(0x00000010L),
    CKA_VALUE(0x00000011L),
    CKA_OBJECT_ID(0x00000012L), 
    CKA_CERTIFICATE_TYPE(0x00000080L), 
    CKA_ISSUER(0x00000081L), 
    CKA_SERIAL_NUMBER(0x00000082L), 
    CKA_AC_ISSUER(0x00000083L), 
    CKA_OWNER(0x00000084L), 
    CKA_ATTR_TYPES(0x00000085L), 
    CKA_TRUSTED(0x00000086L), 
    CKA_CERTIFICATE_CATEGORY(0x00000087L), 
    CKA_JAVA_MIDP_SECURITY_DOMAIN(0x00000088L), 
    CKA_URL(0x00000089L), 
    CKA_HASH_OF_SUBJECT_PUBLIC_KEY(0x0000008AL), 
    CKA_HASH_OF_ISSUER_PUBLIC_KEY(0x0000008BL), 
    CKA_NAME_HASH_ALGORITHM(0x0000008CL), 
    CKA_CHECK_VALUE(0x00000090L), 
    CKA_KEY_TYPE(0x00000100L), 
    CKA_SUBJECT(0x00000101L), 
    CKA_ID(0x00000102L), 
    CKA_SENSITIVE(0x00000103L), 
    CKA_ENCRYPT(0x00000104L), 
    CKA_DECRYPT(0x00000105L), 
    CKA_WRAP(0x00000106L), 
    CKA_UNWRAP(0x00000107L), 
    CKA_SIGN(0x00000108L), 
    CKA_SIGN_RECOVER(0x00000109L), 
    CKA_VERIFY(0x0000010AL), 
    CKA_VERIFY_RECOVER(0x0000010BL), 
    CKA_DERIVE(0x0000010CL), 
    CKA_START_DATE(0x00000110L), 
    CKA_END_DATE(0x00000111L), 
    CKA_MODOLUS(0x00000120L), 
    CKA_MODOLUS_BITS(0x00000121L), 
    CKA_PUBLIC_EXPONENT(0x00000122L), 
    CKA_PRIVATE_EXPONENT(0x00000123L), 
    CKA_PRIME_1(0x00000124L), 
    CKA_PRIME_2(0x00000125L), 
    CKA_EXPONENT_1(0x00000126L), 
    CKA_EXPONENT_2(0x00000127L), 
    CKA_COEFFICIENT(0x00000128L), 
    CKA_PUBLIC_KEY_INFO(0x00000129L), 
    CKA_PRIME(0x00000130L), 
    CKA_SUBPRIME(0x00000131L), 
    CKA_BASE(0x00000132L),
    CKA_PRIME_BITS(0x00000133L), 
    CKA_SUBPRIME_BITS(0x00000134L),
    CKA_VALUE_BITS(0x00000160L), 
    CKA_VALUE_LEN(0x00000161L), 
    CKA_EXTRACTABLE(0x00000162L), 
    CKA_LOCAL(0x00000163L), 
    CKA_NEVER_EXTRACTABLE(0x00000164L), 
    CKA_ALWAYS_SENSITIVE(0x00000165L), 
    CKA_KEY_GEN_MECHANISM(0x00000166L),
    CKA_MODIFIABLE(0x00000170L), 
    CKA_COPYABLE(0x00000171L),
    CKA_DESTROYABLE(0x00000172L),
    CKA_ECDSA_PARAMS(0x00000180L), 
    CKA_EC_PARAMS(0x00000180L),
    CKA_EC_POINT(0x00000181L),
    CKA_SECONDARY_AUTH(0x00000200L), 
    CKA_AUTH_PIN_FLAGS(0x00000201L),
    CKA_ALWAYS_AUTHENTICATE(0x00000202L),
    CKA_WRAP_WITH_TRUSTED(0x00000210L),
    CKA_OTP_FORMAT(0x00000220L), 
    CKA_OTP_LENGTH(0x00000221L), 
    CKA_OTP_TIME_INTERVAL(0x00000222L), 
    CKA_OTP_USER_FRIENDLY_MODE(0x00000223L), 
    CKA_OTP_CHALLENGE_REQUIREMENT(0x00000224L), 
    CKA_OTP_TIME_REQUIREMENT(0x00000225L), 
    CKA_OTP_COUNTER_REQUIREMENT(0x00000226L), 
    CKA_OTP_PIN_REQUIREMENT(0x00000227L), 
    CKA_OTP_COUNTER(0x0000022EL), 
    CKA_OTP_TIME(0x0000022FL), 
    CKA_OTP_USER_IDENTIFIER(0x0000022AL), 
    CKA_OTP_SERVICE_IDENTIFIER(0x0000022BL), 
    CKA_OTP_SERVICE_LOGO(0x0000022CL), 
    CKA_OTP_SERVICE_LOGO_TYPE(0x0000022DL),
    CKA_GOSTR3410_PARAMS(0x00000250L), 
    CKA_GOSTR3411_PARAMS(0x00000251L), 
    CKA_GOST28147_PARAMS(0x00000252L), 
    CKA_HW_FEATURE_TYPE(0x00000300L), 
    CKA_RESET_ON_INIT(0x00000301L), 
    CKA_HAS_RESET(0x00000302L),
    CKA_PIXEL_X(0x00000400L), 
    CKA_PIXEL_Y(0x00000401L), 
    CKA_RESOLUTION(0x00000402L), 
    CKA_CHAR_ROWS(0x00000403L), 
    CKA_CHAR_COLUMNS(0x00000404L), 
    CKA_COLOR(0x00000405L), 
    CKA_BITS_PER_PIXEL(0x00000406L), 
    CKA_CHAR_SETS(0x00000480L), 
    CKA_ENCODING_METHODS(0x00000481L), 
    CKA_MIME_TYPES(0x00000482L), 
    CKA_MECHANISM_TYPE(0x00000500L), 
    CKA_REQUIRED_CMS_ATTRIBUTES(0x00000501L), 
    CKA_DEFAULT_CMS_ATTRIBUTES(0x00000502L), 
    CKA_SUPPORTED_CMS_ATTRIBUTES(0x00000503L);

    private final long value;

    private AttributeValue(long value) {
	this.value = value;
    }

    public long getValue() {
	return value;
    }

}
